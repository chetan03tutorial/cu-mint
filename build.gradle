buildscript {
    apply from : 'dependencies.gradle'
    repositories {
        mavenLocal()
        maven {
            url System.getenv("ARTIFACTORY_URL") ?: "SOME_DEFAULT_REPO_URL"
            credentials {
                username = System.getenv("ARTIFACTORY_USERNAME") ?: "$artifactory_username"
                password = System.getenv("ARTIFACTORY_PASSWORD") ?: "$artifactory_password"
            }
        }
        ivy {
            name "remote_repos_ivy"
            layout "maven"
            url System.getenv("ARTIFACTORY_URL") ?: "SOME_DEFAULT_REPO_URL"
            credentials {
                username = System.getenv("ARTIFACTORY_USERNAME") ?: "$artifactory_username"
                password = System.getenv("ARTIFACTORY_PASSWORD") ?: "$artifactory_password"
            }
        }
    }

    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0'
    }
}



plugins {
    id 'java'
    id 'maven-publish'
}

group 'com.chetan03tutorial.libs'
version '1.0'

allprojects {
    repositories {
        mavenLocal()
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

jar {
    enabled = true
}

dependencies {


    compileOnly libs.lombok
    annotationProcessor annotationProcessors.lombok

    implementation 'io.rest-assured:rest-assured:4.2.0'
    implementation 'io.rest-assured:json-path:4.2.0'
    implementation 'io.rest-assured:xml-path:4.2.0'
    implementation 'io.cucumber:cucumber-java8:7.0.0'
    implementation 'io.cucumber:cucumber-junit:7.0.0'
    implementation 'io.cucumber:cucumber-spring:7.0.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    compileOnly group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'2.6.3'
    compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.1'
    compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    compileOnly group: 'org.springframework.boot', name: 'spring-boot', version:'2.6.3'
    compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.1'
    compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    compileOnly 'org.skyscreamer:jsonassert:1.5.0'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'2.6.3'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'2.6.3'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot', version:'2.6.3'

}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

/**
 * Task to be included in consumer so that Cucumber can be invoked.
 */
task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            /*main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty','--glue', 'com.gapinc.selling.stores.support.tools.bdd.steps', 'src/test/resources/features']*/
            main = "com.chetan03tutorial.libs.aligator.CucumberRunner"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty',
                    '--glue', 'com.chetan03tutorial.libs.aligator', 'src/test/resources/features']
        }
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

test() {
    useJUnitPlatform {
        includeEngines "junit-jupiter"
        excludeEngines "junit-vintage"
    }
    systemProperty("cucumber.junit-platform.naming-strategy", "long")
    /*systemProperty("cucumber.execution.parallel.enabled", System.getProperty("test.parallel"))
    systemProperty("cucumber.filter.tags", "not @ignore")*/
    testLogging {
        events "passed", "skipped", "failed"
    }
}